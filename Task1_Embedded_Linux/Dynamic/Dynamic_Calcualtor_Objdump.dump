
Calculator:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	80 00 c0             	addb   $0xc0,(%rax)
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	01 00                	add    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 b4 6e 8d 83 6c 66 	add    %dh,0x666c838d(%rsi,%rbp,2)
 37e:	83 a3 52 21 ac a2 5e 	andl   $0x5e,-0x5d53deae(%rbx)
 385:	28 e4                	sub    %ah,%ah
 387:	85 07                	test   %eax,(%rdi)
 389:	e4 1d                	in     $0x1d,%al
 38b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)

Disassembly of section .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    $0x0,%al
 38e:	00 00                	add    %al,(%rax)
 390:	10 00                	adc    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	01 00                	add    %eax,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push %rbp
 39b:	00 00                	add    %al,(%rax)
 39d:	00 00                	add    %al,(%rax)
 39f:	00 03                	add    %al,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 02                	add    %al,(%rdx)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 00                	add    %al,(%rax)
 3a9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    (%rax),%al
 3b2:	00 00                	add    %al,(%rax)
 3b4:	0b 00                	or     (%rax),%eax
 3b6:	00 00                	add    %al,(%rax)
 3b8:	01 00                	add    %eax,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	06                   	(bad)  
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3c7:	00 0b                	add    %cl,(%rbx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 00                	add    %al,(%rax)
 3cd:	00 00                	add    %al,(%rax)
 3cf:	00 d1                	add    %dl,%cl
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	59                   	pop    %rcx
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 6a 00             	add    %ch,0x0(%rdx)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	2a 00                	sub    (%rax),%al
 422:	00 00                	add    %al,(%rax)
 424:	20 00                	and    %al,(%rax)
	...
 436:	00 00                	add    %al,(%rax)
 438:	5d                   	pop    %rbp
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 453:	00 12                	add    %dl,(%rdx)
	...
 465:	00 00                	add    %al,(%rax)
 467:	00 46 00             	add    %al,0x0(%rsi)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	61                   	(bad)  
 481:	00 00                	add    %al,(%rax)
 483:	00 12                	add    %dl,(%rdx)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 55 00             	add    %dl,0x0(%rbp)
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	10 00                	adc    %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	20 00                	and    %al,(%rax)
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	66 00 00             	data16 add %al,(%rax)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 01                	add    %al,(%rcx)
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

00000000000004f8 <.dynstr>:
 4f8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4fb:	63 78 61             	movsxd 0x61(%rax),%edi
 4fe:	5f                   	pop    %rdi
 4ff:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 505:	7a 65                	jp     56c <__abi_tag+0x1e0>
 507:	00 5f 49             	add    %bl,0x49(%rdi)
 50a:	54                   	push   %rsp
 50b:	4d 5f                	rex.WRB pop %r15
 50d:	72 65                	jb     574 <__abi_tag+0x1e8>
 50f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 516:	4d 
 517:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 519:	6f                   	outsl  %ds:(%rsi),(%dx)
 51a:	6e                   	outsb  %ds:(%rsi),(%dx)
 51b:	65 54                	gs push %rsp
 51d:	61                   	(bad)  
 51e:	62                   	(bad)  
 51f:	6c                   	insb   (%dx),%es:(%rdi)
 520:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 524:	54                   	push   %rsp
 525:	4d 5f                	rex.WRB pop %r15
 527:	64 65 72 65          	fs gs jb 590 <__abi_tag+0x204>
 52b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 532:	4d 
 533:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 535:	6f                   	outsl  %ds:(%rsi),(%dx)
 536:	6e                   	outsb  %ds:(%rsi),(%dx)
 537:	65 54                	gs push %rsp
 539:	61                   	(bad)  
 53a:	62                   	(bad)  
 53b:	6c                   	insb   (%dx),%es:(%rdi)
 53c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 540:	67 6d                	insl   (%dx),%es:(%edi)
 542:	6f                   	outsl  %ds:(%rsi),(%dx)
 543:	6e                   	outsb  %ds:(%rsi),(%dx)
 544:	5f                   	pop    %rdi
 545:	73 74                	jae    5bb <__abi_tag+0x22f>
 547:	61                   	(bad)  
 548:	72 74                	jb     5be <__abi_tag+0x232>
 54a:	5f                   	pop    %rdi
 54b:	5f                   	pop    %rdi
 54c:	00 6d 75             	add    %ch,0x75(%rbp)
 54f:	6c                   	insb   (%dx),%es:(%rdi)
 550:	00 6d 6f             	add    %ch,0x6f(%rbp)
 553:	64 00 61 64          	add    %ah,%fs:0x64(%rcx)
 557:	64 00 64 69 76       	add    %ah,%fs:0x76(%rcx,%rbp,2)
 55c:	69 00 73 75 62 00    	imul   $0x627573,(%rax),%eax
 562:	5f                   	pop    %rdi
 563:	5f                   	pop    %rdi
 564:	6c                   	insb   (%dx),%es:(%rdi)
 565:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 56c:	72 74                	jb     5e2 <__abi_tag+0x256>
 56e:	5f                   	pop    %rdi
 56f:	6d                   	insl   (%dx),%es:(%rdi)
 570:	61                   	(bad)  
 571:	69 6e 00 70 72 69 6e 	imul   $0x6e697270,0x0(%rsi),%ebp
 578:	74 66                	je     5e0 <__abi_tag+0x254>
 57a:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 57e:	41 6c                	rex.B insb (%dx),%es:(%rdi)
 580:	6c                   	insb   (%dx),%es:(%rdi)
 581:	4d 61                	rex.WRB (bad) 
 583:	74 68                	je     5ed <__abi_tag+0x261>
 585:	2e 73 6f             	jae,pn 5f7 <__abi_tag+0x26b>
 588:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 58c:	63 2e                	movsxd (%rsi),%ebp
 58e:	73 6f                	jae    5ff <__abi_tag+0x273>
 590:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 595:	49                   	rex.WB
 596:	42                   	rex.X
 597:	43 5f                	rex.XB pop %r15
 599:	32 2e                	xor    (%rsi),%ch
 59b:	32 2e                	xor    (%rsi),%ch
 59d:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 5a2:	42                   	rex.X
 5a3:	43 5f                	rex.XB pop %r15
 5a5:	32 2e                	xor    (%rsi),%ch
 5a7:	33 34 00             	xor    (%rax,%rax,1),%esi

Disassembly of section .gnu.version:

00000000000005aa <.gnu.version>:
 5aa:	00 00                	add    %al,(%rax)
 5ac:	01 00                	add    %eax,(%rax)
 5ae:	02 00                	add    (%rax),%al
 5b0:	01 00                	add    %eax,(%rax)
 5b2:	01 00                	add    %eax,(%rax)
 5b4:	03 00                	add    (%rax),%eax
 5b6:	01 00                	add    %eax,(%rax)
 5b8:	01 00                	add    %eax,(%rax)
 5ba:	01 00                	add    %eax,(%rax)
 5bc:	01 00                	add    %eax,(%rax)
 5be:	01 00                	add    %eax,(%rax)
 5c0:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

00000000000005c8 <.gnu.version_r>:
 5c8:	01 00                	add    %eax,(%rax)
 5ca:	02 00                	add    (%rax),%al
 5cc:	91                   	xchg   %eax,%ecx
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 10                	add    %dl,(%rax)
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 00                	add    %al,(%rax)
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 75 1a             	add    %dh,0x1a(%rbp)
 5da:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 5e0:	9b                   	fwait
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 10                	add    %dl,(%rax)
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 b4 91 96 06 00 00 	add    %dh,0x696(%rcx,%rdx,4)
 5ee:	02 00                	add    (%rax),%al
 5f0:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 00                	add    %al,(%rax)
 5f5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000005f8 <.rela.dyn>:
 5f8:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 5ff <__abi_tag+0x273>
 5ff:	00 08                	add    %cl,(%rax)
 601:	00 00                	add    %al,(%rax)
 603:	00 00                	add    %al,(%rax)
 605:	00 00                	add    %al,(%rax)
 607:	00 e0                	add    %ah,%al
 609:	11 00                	adc    %eax,(%rax)
 60b:	00 00                	add    %al,(%rax)
 60d:	00 00                	add    %al,(%rax)
 60f:	00 88 3d 00 00 00    	add    %cl,0x3d(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 08                	add    %cl,(%rax)
 619:	00 00                	add    %al,(%rax)
 61b:	00 00                	add    %al,(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 a0 11 00 00 00    	add    %ah,0x11(%rax)
 625:	00 00                	add    %al,(%rax)
 627:	00 08                	add    %cl,(%rax)
 629:	40 00 00             	rex add %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	08 00                	or     %al,(%rax)
 632:	00 00                	add    %al,(%rax)
 634:	00 00                	add    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	08 40 00             	or     %al,0x0(%rax)
 63b:	00 00                	add    %al,(%rax)
 63d:	00 00                	add    %al,(%rax)
 63f:	00 d8                	add    %bl,%al
 641:	3f                   	(bad)  
 642:	00 00                	add    %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	06                   	(bad)  
 649:	00 00                	add    %al,(%rax)
 64b:	00 02                	add    %al,(%rdx)
	...
 655:	00 00                	add    %al,(%rax)
 657:	00 e0                	add    %ah,%al
 659:	3f                   	(bad)  
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	06                   	(bad)  
 661:	00 00                	add    %al,(%rax)
 663:	00 03                	add    %al,(%rbx)
	...
 66d:	00 00                	add    %al,(%rax)
 66f:	00 e8                	add    %ch,%al
 671:	3f                   	(bad)  
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	06                   	(bad)  
 679:	00 00                	add    %al,(%rax)
 67b:	00 06                	add    %al,(%rsi)
	...
 685:	00 00                	add    %al,(%rax)
 687:	00 f0                	add    %dh,%al
 689:	3f                   	(bad)  
 68a:	00 00                	add    %al,(%rax)
 68c:	00 00                	add    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	06                   	(bad)  
 691:	00 00                	add    %al,(%rax)
 693:	00 09                	add    %cl,(%rcx)
	...
 69d:	00 00                	add    %al,(%rax)
 69f:	00 f8                	add    %bh,%al
 6a1:	3f                   	(bad)  
 6a2:	00 00                	add    %al,(%rax)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 00                	add    %al,(%rax)
 6a8:	06                   	(bad)  
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 0b                	add    %cl,(%rbx)
	...

Disassembly of section .rela.plt:

00000000000006b8 <.rela.plt>:
 6b8:	a8 3f                	test   $0x3f,%al
 6ba:	00 00                	add    %al,(%rax)
 6bc:	00 00                	add    %al,(%rax)
 6be:	00 00                	add    %al,(%rax)
 6c0:	07                   	(bad)  
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 01                	add    %al,(%rcx)
	...
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 07                	add    %al,(%rdi)
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 6e6:	00 00                	add    %al,(%rax)
 6e8:	b8 3f 00 00 00       	mov    $0x3f,%eax
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 07                	add    %al,(%rdi)
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6f9 <__abi_tag+0x36d>
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 00                	add    %al,(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 c0                	add    %al,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	07                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 07                	add    %al,(%rdi)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 c8                	add    %cl,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	07                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 08                	add    %cl,(%rax)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 d0                	add    %dl,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	07                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 72 2f 00 00    	push   0x2f72(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 73 2f 00 00 	bnd jmp *0x2f73(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 5d 2f 00 00 	bnd jmp *0x2f5d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010a0 <mod@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3fa8 <mod@Base>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <add@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 f5 2e 00 00 	bnd jmp *0x2ef5(%rip)        # 3fb0 <add@Base>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <printf@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 ed 2e 00 00 	bnd jmp *0x2eed(%rip)        # 3fb8 <printf@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <divi@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 e5 2e 00 00 	bnd jmp *0x2ee5(%rip)        # 3fc0 <divi@Base>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <mul@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 dd 2e 00 00 	bnd jmp *0x2edd(%rip)        # 3fc8 <mul@Base>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <sub@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 d5 2e 00 00 	bnd jmp *0x2ed5(%rip)        # 3fd0 <sub@Base>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001100 <_start>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	31 ed                	xor    %ebp,%ebp
    1106:	49 89 d1             	mov    %rdx,%r9
    1109:	5e                   	pop    %rsi
    110a:	48 89 e2             	mov    %rsp,%rdx
    110d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1111:	50                   	push   %rax
    1112:	54                   	push   %rsp
    1113:	45 31 c0             	xor    %r8d,%r8d
    1116:	31 c9                	xor    %ecx,%ecx
    1118:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 11e9 <main>
    111f:	ff 15 b3 2e 00 00    	call   *0x2eb3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1125:	f4                   	hlt    
    1126:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    112d:	00 00 00 

0000000000001130 <deregister_tm_clones>:
    1130:	48 8d 3d d9 2e 00 00 	lea    0x2ed9(%rip),%rdi        # 4010 <__TMC_END__>
    1137:	48 8d 05 d2 2e 00 00 	lea    0x2ed2(%rip),%rax        # 4010 <__TMC_END__>
    113e:	48 39 f8             	cmp    %rdi,%rax
    1141:	74 15                	je     1158 <deregister_tm_clones+0x28>
    1143:	48 8b 05 96 2e 00 00 	mov    0x2e96(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    114a:	48 85 c0             	test   %rax,%rax
    114d:	74 09                	je     1158 <deregister_tm_clones+0x28>
    114f:	ff e0                	jmp    *%rax
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <register_tm_clones>:
    1160:	48 8d 3d a9 2e 00 00 	lea    0x2ea9(%rip),%rdi        # 4010 <__TMC_END__>
    1167:	48 8d 35 a2 2e 00 00 	lea    0x2ea2(%rip),%rsi        # 4010 <__TMC_END__>
    116e:	48 29 fe             	sub    %rdi,%rsi
    1171:	48 89 f0             	mov    %rsi,%rax
    1174:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1178:	48 c1 f8 03          	sar    $0x3,%rax
    117c:	48 01 c6             	add    %rax,%rsi
    117f:	48 d1 fe             	sar    %rsi
    1182:	74 14                	je     1198 <register_tm_clones+0x38>
    1184:	48 8b 05 65 2e 00 00 	mov    0x2e65(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    118b:	48 85 c0             	test   %rax,%rax
    118e:	74 08                	je     1198 <register_tm_clones+0x38>
    1190:	ff e0                	jmp    *%rax
    1192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <__do_global_dtors_aux>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	80 3d 65 2e 00 00 00 	cmpb   $0x0,0x2e65(%rip)        # 4010 <__TMC_END__>
    11ab:	75 2b                	jne    11d8 <__do_global_dtors_aux+0x38>
    11ad:	55                   	push   %rbp
    11ae:	48 83 3d 42 2e 00 00 	cmpq   $0x0,0x2e42(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11b5:	00 
    11b6:	48 89 e5             	mov    %rsp,%rbp
    11b9:	74 0c                	je     11c7 <__do_global_dtors_aux+0x27>
    11bb:	48 8b 3d 46 2e 00 00 	mov    0x2e46(%rip),%rdi        # 4008 <__dso_handle>
    11c2:	e8 c9 fe ff ff       	call   1090 <__cxa_finalize@plt>
    11c7:	e8 64 ff ff ff       	call   1130 <deregister_tm_clones>
    11cc:	c6 05 3d 2e 00 00 01 	movb   $0x1,0x2e3d(%rip)        # 4010 <__TMC_END__>
    11d3:	5d                   	pop    %rbp
    11d4:	c3                   	ret    
    11d5:	0f 1f 00             	nopl   (%rax)
    11d8:	c3                   	ret    
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <frame_dummy>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	e9 77 ff ff ff       	jmp    1160 <register_tm_clones>

00000000000011e9 <main>:
    11e9:	f3 0f 1e fa          	endbr64 
    11ed:	55                   	push   %rbp
    11ee:	48 89 e5             	mov    %rsp,%rbp
    11f1:	48 83 ec 10          	sub    $0x10,%rsp
    11f5:	c7 45 f4 0a 00 00 00 	movl   $0xa,-0xc(%rbp)
    11fc:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%rbp)
    1203:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    120a:	be 05 00 00 00       	mov    $0x5,%esi
    120f:	bf 0a 00 00 00       	mov    $0xa,%edi
    1214:	e8 97 fe ff ff       	call   10b0 <add@plt>
    1219:	89 45 fc             	mov    %eax,-0x4(%rbp)
    121c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    121f:	89 c6                	mov    %eax,%esi
    1221:	48 8d 05 dc 0d 00 00 	lea    0xddc(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    1228:	48 89 c7             	mov    %rax,%rdi
    122b:	b8 00 00 00 00       	mov    $0x0,%eax
    1230:	e8 8b fe ff ff       	call   10c0 <printf@plt>
    1235:	be 05 00 00 00       	mov    $0x5,%esi
    123a:	bf 0a 00 00 00       	mov    $0xa,%edi
    123f:	e8 ac fe ff ff       	call   10f0 <sub@plt>
    1244:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1247:	8b 45 fc             	mov    -0x4(%rbp),%eax
    124a:	89 c6                	mov    %eax,%esi
    124c:	48 8d 05 c5 0d 00 00 	lea    0xdc5(%rip),%rax        # 2018 <_IO_stdin_used+0x18>
    1253:	48 89 c7             	mov    %rax,%rdi
    1256:	b8 00 00 00 00       	mov    $0x0,%eax
    125b:	e8 60 fe ff ff       	call   10c0 <printf@plt>
    1260:	be 05 00 00 00       	mov    $0x5,%esi
    1265:	bf 0a 00 00 00       	mov    $0xa,%edi
    126a:	e8 71 fe ff ff       	call   10e0 <mul@plt>
    126f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1272:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1275:	89 c6                	mov    %eax,%esi
    1277:	48 8d 05 b1 0d 00 00 	lea    0xdb1(%rip),%rax        # 202f <_IO_stdin_used+0x2f>
    127e:	48 89 c7             	mov    %rax,%rdi
    1281:	b8 00 00 00 00       	mov    $0x0,%eax
    1286:	e8 35 fe ff ff       	call   10c0 <printf@plt>
    128b:	be 05 00 00 00       	mov    $0x5,%esi
    1290:	bf 0a 00 00 00       	mov    $0xa,%edi
    1295:	e8 36 fe ff ff       	call   10d0 <divi@plt>
    129a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    129d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12a0:	89 c6                	mov    %eax,%esi
    12a2:	48 8d 05 a0 0d 00 00 	lea    0xda0(%rip),%rax        # 2049 <_IO_stdin_used+0x49>
    12a9:	48 89 c7             	mov    %rax,%rdi
    12ac:	b8 00 00 00 00       	mov    $0x0,%eax
    12b1:	e8 0a fe ff ff       	call   10c0 <printf@plt>
    12b6:	be 05 00 00 00       	mov    $0x5,%esi
    12bb:	bf 0a 00 00 00       	mov    $0xa,%edi
    12c0:	e8 db fd ff ff       	call   10a0 <mod@plt>
    12c5:	89 45 fc             	mov    %eax,-0x4(%rbp)
    12c8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12cb:	89 c6                	mov    %eax,%esi
    12cd:	48 8d 05 89 0d 00 00 	lea    0xd89(%rip),%rax        # 205d <_IO_stdin_used+0x5d>
    12d4:	48 89 c7             	mov    %rax,%rdi
    12d7:	b8 00 00 00 00       	mov    $0x0,%eax
    12dc:	e8 df fd ff ff       	call   10c0 <printf@plt>
    12e1:	b8 00 00 00 00       	mov    $0x0,%eax
    12e6:	c9                   	leave  
    12e7:	c3                   	ret    

Disassembly of section .fini:

00000000000012e8 <_fini>:
    12e8:	f3 0f 1e fa          	endbr64 
    12ec:	48 83 ec 08          	sub    $0x8,%rsp
    12f0:	48 83 c4 08          	add    $0x8,%rsp
    12f4:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	54                   	push   %rsp
    2005:	68 65 20 41 64       	push   $0x64412065
    200a:	64 69 74 69 6f 6e 20 	imul   $0x7369206e,%fs:0x6f(%rcx,%rbp,2),%esi
    2011:	69 73 
    2013:	20 25 64 0a 00 54    	and    %ah,0x54000a64(%rip)        # 54002a7d <_end+0x53ffea65>
    2019:	68 65 20 73 75       	push   $0x75732065
    201e:	62                   	(bad)  
    201f:	74 72                	je     2093 <__GNU_EH_FRAME_HDR+0x23>
    2021:	61                   	(bad)  
    2022:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
    2026:	6e                   	outsb  %ds:(%rsi),(%dx)
    2027:	20 69 73             	and    %ch,0x73(%rcx)
    202a:	20 25 64 0a 00 54    	and    %ah,0x54000a64(%rip)        # 54002a94 <_end+0x53ffea7c>
    2030:	68 65 20 6d 75       	push   $0x756d2065
    2035:	6c                   	insb   (%dx),%es:(%rdi)
    2036:	74 69                	je     20a1 <__GNU_EH_FRAME_HDR+0x31>
    2038:	70 6c                	jo     20a6 <__GNU_EH_FRAME_HDR+0x36>
    203a:	69 63 61 74 69 6f 6e 	imul   $0x6e6f6974,0x61(%rbx),%esp
    2041:	20 69 73             	and    %ch,0x73(%rcx)
    2044:	20 25 64 0a 00 54    	and    %ah,0x54000a64(%rip)        # 54002aae <_end+0x53ffea96>
    204a:	68 65 20 64 69       	push   $0x69642065
    204f:	76 69                	jbe    20ba <__GNU_EH_FRAME_HDR+0x4a>
    2051:	73 69                	jae    20bc <__GNU_EH_FRAME_HDR+0x4c>
    2053:	6f                   	outsl  %ds:(%rsi),(%dx)
    2054:	6e                   	outsb  %ds:(%rsi),(%dx)
    2055:	20 69 73             	and    %ch,0x73(%rcx)
    2058:	20 25 64 0a 00 54    	and    %ah,0x54000a64(%rip)        # 54002ac2 <_end+0x53ffeaaa>
    205e:	68 65 20 6d 6f       	push   $0x6f6d2065
    2063:	64 75 6c             	fs jne 20d2 <__GNU_EH_FRAME_HDR+0x62>
    2066:	75 73                	jne    20db <__GNU_EH_FRAME_HDR+0x6b>
    2068:	20 69 73             	and    %ch,0x73(%rcx)
    206b:	20                   	.byte 0x20
    206c:	25                   	.byte 0x25
    206d:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000002070 <__GNU_EH_FRAME_HDR>:
    2070:	01 1b                	add    %ebx,(%rbx)
    2072:	03 3b                	add    (%rbx),%edi
    2074:	34 00                	xor    $0x0,%al
    2076:	00 00                	add    %al,(%rax)
    2078:	05 00 00 00 b0       	add    $0xb0000000,%eax
    207d:	ef                   	out    %eax,(%dx)
    207e:	ff                   	(bad)  
    207f:	ff 68 00             	ljmp   *0x0(%rax)
    2082:	00 00                	add    %al,(%rax)
    2084:	20 f0                	and    %dh,%al
    2086:	ff                   	(bad)  
    2087:	ff 90 00 00 00 30    	call   *0x30000000(%rax)
    208d:	f0 ff                	lock (bad) 
    208f:	ff a8 00 00 00 90    	ljmp   *-0x70000000(%rax)
    2095:	f0 ff                	lock (bad) 
    2097:	ff 50 00             	call   *0x0(%rax)
    209a:	00 00                	add    %al,(%rax)
    209c:	79 f1                	jns    208f <__GNU_EH_FRAME_HDR+0x1f>
    209e:	ff                   	(bad)  
    209f:	ff c0                	inc    %eax
    20a1:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

00000000000020a8 <__FRAME_END__-0xa8>:
    20a8:	14 00                	adc    $0x0,%al
    20aa:	00 00                	add    %al,(%rax)
    20ac:	00 00                	add    %al,(%rax)
    20ae:	00 00                	add    %al,(%rax)
    20b0:	01 7a 52             	add    %edi,0x52(%rdx)
    20b3:	00 01                	add    %al,(%rcx)
    20b5:	78 10                	js     20c7 <__GNU_EH_FRAME_HDR+0x57>
    20b7:	01 1b                	add    %ebx,(%rbx)
    20b9:	0c 07                	or     $0x7,%al
    20bb:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    20c1:	00 00                	add    %al,(%rax)
    20c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	38 f0                	cmp    %dh,%al
    20ca:	ff                   	(bad)  
    20cb:	ff 26                	jmp    *(%rsi)
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 00                	add    %al,(%rax)
    20d1:	44 07                	rex.R (bad) 
    20d3:	10 00                	adc    %al,(%rax)
    20d5:	00 00                	add    %al,(%rax)
    20d7:	00 24 00             	add    %ah,(%rax,%rax,1)
    20da:	00 00                	add    %al,(%rax)
    20dc:	34 00                	xor    $0x0,%al
    20de:	00 00                	add    %al,(%rax)
    20e0:	40 ef                	rex out %eax,(%dx)
    20e2:	ff                   	(bad)  
    20e3:	ff 70 00             	push   0x0(%rax)
    20e6:	00 00                	add    %al,(%rax)
    20e8:	00 0e                	add    %cl,(%rsi)
    20ea:	10 46 0e             	adc    %al,0xe(%rsi)
    20ed:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20f0:	0b 77 08             	or     0x8(%rdi),%esi
    20f3:	80 00 3f             	addb   $0x3f,(%rax)
    20f6:	1a 3a                	sbb    (%rdx),%bh
    20f8:	2a 33                	sub    (%rbx),%dh
    20fa:	24 22                	and    $0x22,%al
    20fc:	00 00                	add    %al,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	14 00                	adc    $0x0,%al
    2102:	00 00                	add    %al,(%rax)
    2104:	5c                   	pop    %rsp
    2105:	00 00                	add    %al,(%rax)
    2107:	00 88 ef ff ff 10    	add    %cl,0x10ffffef(%rax)
	...
    2115:	00 00                	add    %al,(%rax)
    2117:	00 14 00             	add    %dl,(%rax,%rax,1)
    211a:	00 00                	add    %al,(%rax)
    211c:	74 00                	je     211e <__GNU_EH_FRAME_HDR+0xae>
    211e:	00 00                	add    %al,(%rax)
    2120:	80 ef ff             	sub    $0xff,%bh
    2123:	ff 60 00             	jmp    *0x0(%rax)
	...
    212e:	00 00                	add    %al,(%rax)
    2130:	1c 00                	sbb    $0x0,%al
    2132:	00 00                	add    %al,(%rax)
    2134:	8c 00                	mov    %es,(%rax)
    2136:	00 00                	add    %al,(%rax)
    2138:	b1 f0                	mov    $0xf0,%cl
    213a:	ff                   	(bad)  
    213b:	ff                   	(bad)  
    213c:	ff 00                	incl   (%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	00 45 0e             	add    %al,0xe(%rbp)
    2143:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2149:	02 f6                	add    %dh,%dh
    214b:	0c 07                	or     $0x7,%al
    214d:	08 00                	or     %al,(%rax)
	...

0000000000002150 <__FRAME_END__>:
    2150:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003d80 <__frame_dummy_init_array_entry>:
    3d80:	e0 11                	loopne 3d93 <_DYNAMIC+0x3>
    3d82:	00 00                	add    %al,(%rax)
    3d84:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003d88 <__do_global_dtors_aux_fini_array_entry>:
    3d88:	a0                   	.byte 0xa0
    3d89:	11 00                	adc    %eax,(%rax)
    3d8b:	00 00                	add    %al,(%rax)
    3d8d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003d90 <_DYNAMIC>:
    3d90:	01 00                	add    %eax,(%rax)
    3d92:	00 00                	add    %al,(%rax)
    3d94:	00 00                	add    %al,(%rax)
    3d96:	00 00                	add    %al,(%rax)
    3d98:	83 00 00             	addl   $0x0,(%rax)
    3d9b:	00 00                	add    %al,(%rax)
    3d9d:	00 00                	add    %al,(%rax)
    3d9f:	00 01                	add    %al,(%rcx)
    3da1:	00 00                	add    %al,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
    3da7:	00 91 00 00 00 00    	add    %dl,0x0(%rcx)
    3dad:	00 00                	add    %al,(%rax)
    3daf:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	00 10                	add    %dl,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	0d 00 00 00 00       	or     $0x0,%eax
    3dc5:	00 00                	add    %al,(%rax)
    3dc7:	00 e8                	add    %ch,%al
    3dc9:	12 00                	adc    (%rax),%al
    3dcb:	00 00                	add    %al,(%rax)
    3dcd:	00 00                	add    %al,(%rax)
    3dcf:	00 19                	add    %bl,(%rcx)
    3dd1:	00 00                	add    %al,(%rax)
    3dd3:	00 00                	add    %al,(%rax)
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 80 3d 00 00 00    	add    %al,0x3d(%rax)
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 1b                	add    %bl,(%rbx)
    3de1:	00 00                	add    %al,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 08                	add    %cl,(%rax)
    3de9:	00 00                	add    %al,(%rax)
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 1a                	add    %bl,(%rdx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 88 3d 00 00 00    	add    %cl,0x3d(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	08 00                	or     %al,(%rax)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	f5                   	cmc    
    3e11:	fe                   	(bad)  
    3e12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e25 <_DYNAMIC+0x95>
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 f8                	add    %bh,%al
    3e29:	04 00                	add    $0x0,%al
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 06                	add    %al,(%rsi)
    3e31:	00 00                	add    %al,(%rax)
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 d8                	add    %bl,%al
    3e39:	03 00                	add    (%rax),%eax
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 0a                	add    %cl,(%rdx)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 b2 00 00 00 00    	add    %dh,0x0(%rdx)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 0b                	add    %cl,(%rbx)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 18                	add    %bl,(%rax)
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e65 <_DYNAMIC+0xd5>
	...
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 03                	add    %al,(%rbx)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 90 3f 00 00 00    	add    %dl,0x3f(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 02                	add    %al,(%rdx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 90 00 00 00 00    	add    %dl,0x0(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 14 00             	add    %dl,(%rax,%rax,1)
    3e92:	00 00                	add    %al,(%rax)
    3e94:	00 00                	add    %al,(%rax)
    3e96:	00 00                	add    %al,(%rax)
    3e98:	07                   	(bad)  
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 17                	add    %dl,(%rdi)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 07                	add    %al,(%rdi)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 f8                	add    %bh,%al
    3eb9:	05 00 00 00 00       	add    $0x0,%eax
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	08 00                	or     %al,(%rax)
    3ec2:	00 00                	add    %al,(%rax)
    3ec4:	00 00                	add    %al,(%rax)
    3ec6:	00 00                	add    %al,(%rax)
    3ec8:	c0 00 00             	rolb   $0x0,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 09                	add    %cl,(%rcx)
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 18                	add    %bl,(%rax)
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 1e                	add    %bl,(%rsi)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 08                	add    %cl,(%rax)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 fb                	add    %bh,%bl
    3ef1:	ff                   	(bad)  
    3ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 01                	add    %al,(%rcx)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	08 00                	or     %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 fe                	add    %bh,%dh
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 c8                	add    %cl,%al
    3f09:	05 00 00 00 00       	add    $0x0,%eax
    3f0e:	00 00                	add    %al,(%rax)
    3f10:	ff                   	(bad)  
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 01                	add    %al,(%rcx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 f0                	add    %dh,%al
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 aa 05 00 00 00    	add    %ch,0x5(%rdx)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 f9                	add    %bh,%cl
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003f90 <_GLOBAL_OFFSET_TABLE_>:
    3f90:	90                   	nop
    3f91:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    3fa6:	00 00                	add    %al,(%rax)
    3fa8:	30 10                	xor    %dl,(%rax)
    3faa:	00 00                	add    %al,(%rax)
    3fac:	00 00                	add    %al,(%rax)
    3fae:	00 00                	add    %al,(%rax)
    3fb0:	40 10 00             	rex adc %al,(%rax)
    3fb3:	00 00                	add    %al,(%rax)
    3fb5:	00 00                	add    %al,(%rax)
    3fb7:	00 50 10             	add    %dl,0x10(%rax)
    3fba:	00 00                	add    %al,(%rax)
    3fbc:	00 00                	add    %al,(%rax)
    3fbe:	00 00                	add    %al,(%rax)
    3fc0:	60                   	(bad)  
    3fc1:	10 00                	adc    %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 70 10             	add    %dh,0x10(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	80 10 00             	adcb   $0x0,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	34 2e                	xor    $0x2e,%al
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <_end+0x75623531>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	32 2e                	xor    (%rsi),%ch
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	34 2e                	xor    $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
